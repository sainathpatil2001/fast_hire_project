# Generated by Django 4.2.21 on 2025-06-08 07:12

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ApplicantProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=15)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profiles/')),
                ('current_city', models.CharField(max_length=100)),
                ('current_state', models.CharField(max_length=100)),
                ('current_country', models.CharField(default='India', max_length=100)),
                ('headline', models.CharField(help_text='Professional headline', max_length=200)),
                ('summary', models.TextField(help_text='Professional summary', max_length=2000)),
                ('total_experience_years', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('total_experience_months', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(11)])),
                ('current_employment_status', models.CharField(choices=[('employed', 'Currently Employed'), ('unemployed', 'Unemployed'), ('student', 'Student'), ('freelancer', 'Freelancer'), ('self_employed', 'Self Employed')], max_length=20)),
                ('notice_period', models.CharField(blank=True, choices=[('immediate', 'Immediate'), ('15_days', '15 Days'), ('1_month', '1 Month'), ('2_months', '2 Months'), ('3_months', '3 Months'), ('more_than_3', 'More than 3 Months')], max_length=20)),
                ('current_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='resumes/')),
                ('resume_updated_at', models.DateTimeField(blank=True, null=True)),
                ('profile_completion', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('is_profile_public', models.BooleanField(default=True)),
                ('is_available_for_jobs', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'applicant_profiles',
            },
        ),
        migrations.CreateModel(
            name='Industry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name_plural': 'Industries',
                'db_table': 'industries',
            },
        ),
        migrations.CreateModel(
            name='WorkExperience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=200)),
                ('company_name', models.CharField(max_length=200)),
                ('employment_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('freelance', 'Freelance')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('description', models.TextField()),
                ('key_achievements', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_experience', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'work_experience',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('technologies_used', models.TextField(help_text='Comma separated technologies')),
                ('project_url', models.URLField(blank=True)),
                ('github_url', models.URLField(blank=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_ongoing', models.BooleanField(default=False)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'projects',
                'ordering': ['-start_date'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(default='India', max_length=100)),
            ],
            options={
                'db_table': 'locations',
                'unique_together': {('city', 'state', 'country')},
            },
        ),
        migrations.CreateModel(
            name='JobPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferred_job_types', models.TextField(default='[]', help_text='JSON formatted job types')),
                ('preferred_work_modes', models.TextField(default='[]', help_text='JSON formatted work modes')),
                ('preferred_companies', models.TextField(blank=True, help_text='Comma separated company names')),
                ('min_salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_salary_expectation', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_industries', models.ManyToManyField(blank=True, to='applicant.industry')),
                ('profile', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='job_preferences', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'job_preferences',
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('degree_type', models.CharField(choices=[('high_school', 'High School'), ('diploma', 'Diploma'), ('bachelor', "Bachelor's Degree"), ('master', "Master's Degree"), ('phd', 'PhD'), ('certification', 'Certification')], max_length=20)),
                ('degree_name', models.CharField(max_length=200)),
                ('institution', models.CharField(max_length=200)),
                ('field_of_study', models.CharField(blank=True, max_length=200)),
                ('start_year', models.IntegerField()),
                ('end_year', models.IntegerField(blank=True, null=True)),
                ('is_current', models.BooleanField(default=False)),
                ('percentage', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('cgpa', models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True)),
                ('description', models.TextField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'education',
                'ordering': ['-end_year', '-start_year'],
            },
        ),
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('issuing_organization', models.CharField(max_length=200)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('credential_id', models.CharField(blank=True, max_length=100)),
                ('credential_url', models.URLField(blank=True)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'certifications',
                'ordering': ['-issue_date'],
            },
        ),
        migrations.AddField(
            model_name='applicantprofile',
            name='preferred_locations',
            field=models.ManyToManyField(blank=True, to='applicant.location'),
        ),
        migrations.AddField(
            model_name='applicantprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='SocialLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('linkedin', 'LinkedIn'), ('github', 'GitHub'), ('twitter', 'Twitter'), ('portfolio', 'Portfolio Website'), ('stackoverflow', 'Stack Overflow'), ('behance', 'Behance'), ('dribbble', 'Dribbble'), ('other', 'Other')], max_length=20)),
                ('url', models.URLField()),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='social_links', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'social_links',
                'unique_together': {('profile', 'platform')},
            },
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('skill_type', models.CharField(choices=[('technical', 'Technical'), ('soft', 'Soft Skills'), ('language', 'Language'), ('tool', 'Tools & Software')], max_length=20)),
                ('proficiency', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('expert', 'Expert')], max_length=20)),
                ('years_of_experience', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)])),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='skills', to='applicant.applicantprofile')),
            ],
            options={
                'db_table': 'skills',
                'unique_together': {('profile', 'name')},
            },
        ),
    ]
